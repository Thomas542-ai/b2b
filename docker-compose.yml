version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: leadsfynder-postgres
    environment:
      POSTGRES_DB: leadsfynder
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - leadsfynder-network

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: leadsfynder-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - leadsfynder-network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: leadsfynder-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/leadsfynder
      REDIS_URL: redis://redis:6379
      JWT_SECRET: your-super-secret-jwt-key-change-in-production
      JWT_EXPIRES_IN: 7d
      PORT: 8000
      FRONTEND_URL: http://localhost:3000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      - postgres
      - redis
    networks:
      - leadsfynder-network
    command: npm run dev

  # Frontend React App
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: leadsfynder-frontend
    environment:
      VITE_API_URL: http://localhost:8000
      VITE_APP_NAME: LeadsFynder
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - leadsfynder-network
    command: npm run dev

  # Nginx Reverse Proxy (Production)
  nginx:
    image: nginx:alpine
    container_name: leadsfynder-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - leadsfynder-network
    profiles:
      - production

  # Mailhog for email testing
  mailhog:
    image: mailhog/mailhog:latest
    container_name: leadsfynder-mailhog
    ports:
      - "1025:1025"  # SMTP
      - "8025:8025"  # Web UI
    networks:
      - leadsfynder-network
    profiles:
      - development

volumes:
  postgres_data:
  redis_data:

networks:
  leadsfynder-network:
    driver: bridge
